name: Publish release

on:
  release:
    types: [published]

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Setup build cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Publish artifact to central
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
          GPG_KEYS: ${{ secrets.GPG_KEYS }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

        # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
        # So if we split on '/' and take the 3rd value, we can get the release name.
        run: |
          export GPG_TTY=$(tty) && echo "$GPG_KEYS" | gpg --fast-import --batch
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "-- Setting new release version ${NEW_VERSION} for ${REPO_NAME} --"
          mvn -B versions:set -DnewVersion="${NEW_VERSION}" -DgenerateBackupPoms=false
          echo "-- Build, test and deploy release to Sonatype --"
          mvn -B --settings .github/settings.xml clean deploy -Prelease,deploy-to-sonatype -Dmaven.wagon.http.pool=false

      - name: Publish artifact to GPR
        env:
          NEW_VERSION: ${{ github.event.release.tag_name }}
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN:  ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions release"
          mvn  --settings .github/settings.xml -Pgithub --batch-mode -Dmaven.main.skip=true -Dmaven.test.skip=true  -Dmaven.javadoc.skip=true deploy